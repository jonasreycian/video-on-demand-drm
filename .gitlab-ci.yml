stages:
#  - environment
#  - dependencies
  - check
  - test
#  - build
##  - internal
##  - alpha
##  - beta
##  - production

.clean_build:
  before_script:
    - flutter pub get
    - flutter clean

#variables:
#  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
#
#before_script:
#  - export GRADLE_USER_HOME=`pwd`/.gradle
#  - export PUB_CACHE=`pwd`/.pub-cache
#
#cache:
#  policy: pull
#  # cache per branch or tag
#  key: $CI_COMMIT_REF_SLUG
#
#
#.updateContainerJob:
#  image: docker:stable
#  stage: environment
#  services:
#    - docker:dind
#  script:
#    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG || true
#    - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
#    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
#
#updateContainer:
#  extends: .updateContainerJob
#  only:
#    changes:
#      - Dockerfile
#
#ensureContainer:
#  extends: .updateContainerJob
#  allow_failure: true
#  before_script:
#    - "mkdir -p ~/.docker && echo '{\"experimental\": \"enabled\"}' > ~/.docker/config.json"
#    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#    # Skip update container `script` if the container already exists
#    # via https://gitlab.com/gitlab-org/gitlab-ce/issues/26866#note_97609397 -> https://stackoverflow.com/a/52077071/796832
#    - docker manifest inspect $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG > /dev/null && exit || true
#
#download dependencies:
#  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
#  stage: dependencies
#  script:
#    - flutter pub get
#    - flutter test
#    - flutter build appbundle --debug
#  cache:
#    paths:
#      - .pub-cache
#      - .gradle/wrapper
#      - .gradle/caches
#    policy: pull-push
#    key: $CI_COMMIT_REF_SLUG
#  only:
#    changes:
#      - pubspec.lock
#
#
.checkJob:
  image: cirrusci/flutter:stable
  extends: [ .clean_build ]
  stage: check
  only:
    - main
    - dev
    - merge_requests
    - tags

check_dart_lints:
  extends: [ .checkJob ]
  script:
    - flutter analyze

check_format:
  extends: [ .checkJob ]
  script:
    - flutter format -l 120 --set-exit-if-changed .

unit_test:
  image: cirrusci/flutter:stable
  extends: [ .clean_build ]
  stage: test
  script:
    - flutter test

#.build_job:
#  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
#  stage: build
#  before_script:
#    - export GRADLE_USER_HOME=`pwd`/.gradle
#    - export PUB_CACHE=`pwd`/.pub-cache
#    # We store this binary file in a variable as hex with this command, `xxd -p gitter-android-app.jks`
#    # Then we convert the hex back to a binary file
#    - echo "$signing_jks_file_hex" | xxd -r -p - > android/keystore.jks
#    - flutter pub get
#  after_script:
#    - rm -f android/keystore.jks || true
#  artifacts:
#    paths:
#      - build/app/outputs
#
#buildDebug:
#  extends: .build_job
#  script:
#    - flutter build appbundle --debug
#  only:
#    - dev
#    - master
#  artifacts:
#    paths:
#      - build\app\outputs\bundle\debug\app.aab
#
##buildRelease:
##  extends: .build_job
##  script:
##    - flutter build appbundle --release --verbose
##  environment:
##    name: production
##  only:
##    - master
##    - tags
#
##publishInternal:
##  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
##  stage: internal
##  dependencies:
##    - buildRelease
##  when: manual
##  before_script:
##    - echo $google_play_service_account_api_key_json > fastlane-api-key.json
##    - ls -la
##    - ls -la ~
##  after_script:
##    - rm -f fastlane-api-key.json
##  script:
##    - cd android && bundle exec fastlane internal
##  only:
##    # No tag, no publishing
##    - tags
##
##.promote_job:
##  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
##  when: manual
##  dependencies: []
##  before_script:
##    - echo $google_play_service_account_api_key_json > fastlane-api-key.json
##  after_script:
##    - rm -f fastlane-api-key.json
##  only:
##    # No tag, no promotion
##    - tags
##
##promoteAlpha:
##  extends: .promote_job
##  stage: alpha
##  script:
##    - cd android && bundle exec fastlane promote_internal_to_alpha
##
##promoteBeta:
##  extends: .promote_job
##  stage: beta
##  script:
##    - cd android && bundle exec fastlane promote_alpha_to_beta
##
##promoteProduction:
##  extends: .promote_job
##  stage: production
##  script:
##    - cd android && bundle exec fastlane promote_beta_to_production
